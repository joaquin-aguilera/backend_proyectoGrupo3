




INICIAR LA BD:
docker compose up -d

Esto levanta:

MongoDB en puerto 27017
Mongo Express (UI) en http://localhost:8081

(la bd es searchbd)
Estructura
3 colecciones principales:
searches: Almacena búsquedas
clicks: Almacena clicks en productos
index_events: Para historia de indexación (opcional)

3. Probar la Métrica Principal

# Ver clicks por producto en un rango de fechas
node scripts/query-clicks-example.mjs 2025-10-01 2025-10-31


4. Pruebas Manuales en MongoDB

# Conectar a MongoDB
docker exec -it search_mongo mongosh "mongodb://search_user:search_pass@localhost:27017/searchdb?authSource=searchdb"

# Insertar búsqueda de prueba
db.searches.insertOne({
  userId: 'user-xyz',
  queryText: 'audífonos',
  filters: { categoria: 'electronica' },
  page: 1,
  pageSize: 20,
  requestedAt: new Date(),
  results: [
    { productId: 'P-111', position: 1 },
    { productId: 'P-222', position: 2 }
  ]
})

# Insertar click (usar el ID devuelto arriba)
db.clicks.insertOne({
  searchId: ObjectId("68f0387e13c6b7e145ce5f47"),
  productId: 'P-111',
  userId: 'user-xyz',
  clickedAt: new Date()
})

# Ver datos
db.searches.find().pretty()
db.clicks.find().pretty()





------------------------------------------------------------------------------------------------------------------------------------------------


BACKEND NECESITA:
# Instalar dependencias
npm install @nestjs/mongoose mongoose

# Agregar en .env
MONGODB_URI=mongodb://search_user:search_pass@localhost:27017/searchdb?authSource=searchdb

# Configurar en app.module.ts
import { MongooseModule } from '@nestjs/mongoose';
@Module({
  imports: [
    MongooseModule.forRoot(process.env.MONGODB_URI)
  ]
})



6.- Índices Importantes
En searches:
userId + requestedAt
requestedAt
results.productId + requestedAt
texto en queryText
En clicks:
productId + clickedAt (índice principal)
searchId
userId

7.Credenciales
Usuario app: search_user/search_pass
Admin: root/rootpass
Verificación de Funcionamiento


8. verificar FUNCIONAMIENTO
# Ver contenedores activos
docker ps

# Probar métricas
node scripts/query-clicks-example.mjs 2025-10-01 2025-10-31

# Acceder a UI
http://localhost:8081



Esta BD está diseñada para:

Almacenar búsquedas de usuarios
Registrar clicks en productos
Proporcionar métricas de clicks por producto
No depender directamente del microservicio de Publicaciones
Escalar fácilmente con índices predefinidos





importar BD:
import { MongooseModule } from '@nestjs/mongoose';

@Module({
  imports: [
    MongooseModule.forRoot(process.env.MONGODB_URI)
  ],
  // ...
})